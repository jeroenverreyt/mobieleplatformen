package com.thomasmore.mobieleplatformen;

import java.util.ArrayList;

import java.util.HashMap;

import org.apache.http.NameValuePair;
import org.apache.http.message.BasicNameValuePair;
import org.json.JSONArray;
import org.json.JSONException;
import org.json.JSONObject;

import android.app.Activity;
import android.app.AlertDialog;
import android.app.Dialog;

import android.app.ProgressDialog;
import android.content.DialogInterface;
import android.content.Intent;

import android.os.AsyncTask;
import android.os.Bundle;

import android.util.Log;
import android.view.LayoutInflater;
import android.view.View;
import android.view.View.OnClickListener;
import android.view.View.OnLongClickListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.AdapterView.OnItemLongClickListener;
import android.widget.AdapterView.OnItemSelectedListener;
import android.widget.ArrayAdapter;
import android.widget.ListAdapter;
import android.widget.ListView;
import android.widget.SimpleAdapter;
import android.widget.Spinner;

public class ProviderList extends Activity implements OnItemSelectedListener,
		OnItemClickListener, OnItemLongClickListener {
	ListAdapter adapter;
	private int success;
	private ItemAdapter itemAdapter;
	Spinner spinner;
	private JSONParser jsonParser = new JSONParser();
	private JSONArray listProv = null;
	private ArrayList<Abo> abolist = new ArrayList<Abo>();
	// arraylist maken
	ArrayList<HashMap<String, String>> providerList;

	// link naar de webservice
	private static final String INDEX_URL = "http://www.abochecker.tk/webservice/index.php";
	private static final String DELETE_URL = "http://www.abochecker.tk/webservice/delete.php";

	// "succes" verwijst naar de variabele succes in onze JSONData dat we
	// aanmaken in de webservice

	private static final String TAG_SUCCESS = "succes";
	private static final String TAG_ID = "id";
	private static final String TAG_NAME = "Name";
	private static final String TAG_PROVIDER = "Provider";
	private static final String TAG_PRICE = "Price";
	private static final String TAG_TYPE = "Type";
	private static final String TAG_GR_BEL = "Gr_Bel";
	private static final String TAG_GR_BEL_TYPE = "Gr_Bel_Type";
	private static final String TAG_GR_BEL_EN = "Gr_Bel_EN";
	private static final String TAG_GR_SMS = "Gr_SMS";
	private static final String TAG_GR_SMS_TYPE = "Gr_SMS_Type";
	private static final String TAG_GR_SMS_EN = "Gr_SMS_EN";
	private static final String TAG_GR_MI = "Gr_MI";
	private static final String TAG_BEL_EN = "Bel_EN";
	private static final String TAG_BEL_AN = "Bel_AN";
	private static final String TAG_BEL_VL = "Bel_VL";
	private static final String TAG_BEL_BUI = "Bel_Bui";
	private static final String TAG_SMS_EN = "SMS_EN";
	private static final String TAG_SMS_AN = "SMS_AN";
	private static final String TAG_MMS = "MMS";
	private static final String TAG_MI = "MI";

	// de array prov (met alle gevonden providers)
	private static final String TAG_PROV = "prov";
	private int pos;
	ListView lv;

	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.home);
		lv = (ListView) findViewById(android.R.id.list);
		spinner = (Spinner) findViewById(R.id.spProvider);
		providerList = new ArrayList<HashMap<String, String>>();
		itemAdapter = new ItemAdapter(this, R.layout.list_item, abolist);

		ArrayAdapter<CharSequence> adapter = ArrayAdapter.createFromResource(
				this, R.array.providers_array,
				android.R.layout.simple_spinner_item);
		// Specify the layout to use when the list of choices appears
		adapter.setDropDownViewResource(android.R.layout.simple_spinner_dropdown_item);
		// Apply the adapter to the spinner
		spinner.setAdapter(adapter);
		spinner.setOnItemSelectedListener(this);
		lv.setLongClickable(true);
		lv.setOnItemClickListener(this);
		lv.setOnItemLongClickListener(this);

	}

	class getProviders extends AsyncTask<String, String, String> {
		private ProgressDialog dialog;

		@Override
		protected String doInBackground(String... args) {
			// TODOs Auto-generated method stub
			Log.d("test", "doInBackground");

			try {

				ArrayList<NameValuePair> params = new ArrayList<NameValuePair>();
				// paramater sms verwijst naar de POST variabele sms in onze
				// webservice

				params.add(new BasicNameValuePair("provider", spinner
						.getSelectedItem().toString()));

				// hier voer je de POST uit op de webservice
				JSONObject json = jsonParser.makeHttpRequest(INDEX_URL, "POST",
						params);

				// de waarde uit de JSONData wordt hier gehaald
				success = json.getInt(TAG_SUCCESS);

				// alle gevonden tarieven in een array
				listProv = json.getJSONArray(TAG_PROV);
				abolist.clear();
				for (int i = 0; i < listProv.length(); i++) {

					// array afgaan en elke naam er uit printen
					JSONObject c = listProv.getJSONObject(i);

					// waardes die we nodig hebben uit de tabel eruit halen
					String name = c.getString(TAG_NAME);
					String provider = c.getString(TAG_PROVIDER);
					double price = c.getDouble(TAG_PRICE);
					String gr_bel = c.getString(TAG_GR_BEL);
					String gr_bel_type = c.getString(TAG_GR_BEL_TYPE);
					String gr_sms = c.getString(TAG_GR_SMS);
					double gr_mi = c.getDouble(TAG_GR_MI);
					double bel_AN = c.getDouble(TAG_BEL_AN);
					double sms_AN = c.getDouble(TAG_SMS_AN);
					double sms_EN = c.getDouble(TAG_SMS_EN);
					double mi = c.getDouble(TAG_MI);
					double bel_bui = c.getDouble(TAG_BEL_BUI);
					String gr_bel_en = c.getString(TAG_GR_BEL_EN);
					String gr_sms_en = c.getString(TAG_GR_SMS_EN);
					String gr_sms_type = c.getString(TAG_GR_SMS_TYPE);
					int id = c.getInt(TAG_ID);

					// alle tarieven in een arraylist zetten
					Abo a = new Abo();
					a.setName(name);
					a.setProvider(provider);
					a.setPrice(price);
					a.setGr_bel(gr_bel);
					a.setGr_bel_type(gr_bel_type);
					a.setGr_bel_en(gr_bel_en);
					a.setGr_sms_en(gr_sms_en);
					a.setGr_sms(gr_sms);
					a.setGr_sms_type(gr_sms_type);
					a.setGr_mi(gr_mi);
					a.setBel_an(bel_AN);
					a.setSms_an(sms_AN);
					a.setSms_en(sms_EN);
					a.setMi(mi);
					a.setId(id);
					a.setBel_bui(bel_bui);
					abolist.add(a);

				}

			} catch (JSONException e) {
				e.printStackTrace();
			}

			printList();

			return null;
		}

		@Override
		protected void onPreExecute() {
			// TODO Auto-generated method stub
			Log.d("test", "onPreExecute");
			dialog = new ProgressDialog(ProviderList.this);
			dialog.setCancelable(true);
			dialog.setMessage("Even geduld, de tarieven worden opgehaald.");
			dialog.show();
			super.onPreExecute();
		}

		private void printList() {
			// hier wordt de listview aangemaakt met de abo's gesorteerd op
			// prijs
			for (Abo a : abolist) {
				Log.d("name", a.getName());
				Log.d("name", a.getPrice() + "");

				HashMap<String, String> tarief = new HashMap<String, String>();

				tarief.put(TAG_NAME, a.getName());
				tarief.put(TAG_PRICE, a.getPrice() + "");
				providerList.add(tarief);
			}
		}

		@Override
		protected void onPostExecute(String result) {
			super.onPostExecute(result);

			// output MOET in onPostExecute, als je dit doet in doInBackground
			// crasht de applicatie

			itemAdapter = new ItemAdapter(ProviderList.this,
					R.layout.list_item, abolist);

			lv.setAdapter(itemAdapter);

			dialog.cancel();
		}

	}

	@Override
	public void onItemSelected(AdapterView<?> arg0, View arg1, int arg2,
			long arg3) {
		// TODO Auto-generated method stub
		new getProviders().execute();
	}

	@Override
	public void onNothingSelected(AdapterView<?> arg0) {
		// TODO Auto-generated method stub

	}

	@Override
	public void onItemClick(AdapterView<?> arg0, View arg1, int position,
			long arg3) {
		
		if (arg0.getId() == R.id.listView1) {
			Log.d("listview", "position" + position);

			switch (position) {
			case 0:

				break;

			case 1:

				break;

			case 2:
				
				new delete().execute();

				break;
			}

		} else {
			Bundle basket = new Bundle();
			basket.putInt("position", position);
			basket.putSerializable("abolist", abolist);
			Intent i = new Intent(ProviderList.this, EditBundle.class);
			i.putExtras(basket);
			startActivity(i);
		}
	}

	@Override
	public boolean onItemLongClick(AdapterView<?> arg0, View arg1, int arg2,
			long arg3) {
		pos = arg2;
		String names[] = { "Naam wijzigen", "Prijzen aanpassen", "Verwijderen" };
		AlertDialog.Builder alertDialog = new AlertDialog.Builder(
				ProviderList.this);
		LayoutInflater inflater = getLayoutInflater();
		View convertView = (View) inflater.inflate(R.layout.custom, null);
		alertDialog.setView(convertView);
		alertDialog.setTitle("Wat wil je doen?");
		ListView listview = (ListView) convertView.findViewById(R.id.listView1);
		ArrayAdapter<String> adapter = new ArrayAdapter<String>(this,
				android.R.layout.simple_list_item_1, names);
		listview.setAdapter(adapter);
		listview.setOnItemClickListener(this);
		alertDialog.show();
		return false;
	}

	class delete extends AsyncTask<String, String, String> {

		@Override
		protected String doInBackground(String... params) {
			ArrayList<NameValuePair> params2 = new ArrayList<NameValuePair>();
			String id =String.valueOf (abolist.get(pos).getId());
			Log.d("listview", "id : " + id);
			params2.add(new BasicNameValuePair("id", id));
			// hier voer je de POST uit op de webservice
						JSONObject json = jsonParser.makeHttpRequest(DELETE_URL, "POST",
								params2);
						// de waarde uit de JSONData wordt hier gehaald
						try {
							int succes = json.getInt("succes");
							String query = json.getString("query");

							Log.d("json", "succes: " + succes);
							Log.d("json", "query: " + query);
						} catch (JSONException e) {
							// TODO Auto-generated catch block
							Log.d("json", "failed");
							e.printStackTrace();
						}

					

			return null;
		}
	}
	
	
}
